---
interface Props {
	banners: {
		href: string;
		src: string;
		alt: string;
	}[];
	width: number;
	height: number;
	animationSpeed: number;
}
import TagBanner from "@/components/TagBanner.astro";
const { banners, width, height, animationSpeed } = Astro.props;
---

<div
	class="pt-4 flex w-full items-center justify-center"
	style=`height: ${height*2}px;`
>
	<div class="overflow-hidden relative w-full" style=`height: ${height}px;`>
		<p id="width" class="hidden">{width}</p>
		<p id="banners" class="hidden">{banners.length}</p>
		<div
			class="flex gap-1"
			style=`
				width: calc(${width}px * ${banners.length * 2});
				animation: scroll ${animationSpeed}s linear infinite;
			`
		>
			{
				banners.map((banner) => (
					<TagBanner
						href={banner.href}
						src={banner.src}
						alt={banner.alt}
						width={width}
						height={height}
					/>
				))
			}
			{
				banners.map((banner) => (
					<TagBanner
						href={banner.href}
						src={banner.src}
						alt={banner.alt}
						width={width}
						height={height}
					/>
				))
			}
		</div>
	</div>
</div>
<script type="module">
	window.onload = () => {
		let width = document.getElementById("width").innerText;
		let bannersLength = document.getElementById("banners").innerText;
		let styleSheet = document.createElement("style");
		let keyframes = `
    @keyframes scroll {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(calc(-${width}px * ${bannersLength}));
      }
    }`;

		styleSheet.innerText = keyframes;
		document.head.appendChild(styleSheet);
	};
</script>
